.container
  .row
    .card.col.s12
      %button.right{"ng-click": "$ctrl.add_log_entry('lipschitz')"}
        lipschitz
    .card.col.s12
      %button.right{"ng-click": "$ctrl.add_log_entry('cock')"}
        the rooster
    .card.col.s12
      %button.right{"ng-click": "$ctrl.add_log_entry('Lunch, Lovingly Prepared')"}
        Sammich
      %button.right{"ng-click": "$ctrl.add_log_entry('Prepared, not Sowed')"}
        OATS
    .card.col.s12
      %button.right{"ng-click": "$ctrl.add_log_entry('Spirit Highlands')"}
        Spirit Highlands
    .card.col.s12
      %a{href: "https://wow.gameinfo.io/invasions"} Invasion Timers
      %button.right{"ng-click": "$ctrl.add_log_entry('Invasion: group1')"}
        Invasion: Group1
      %button.right{"ng-click": "$ctrl.add_log_entry('Invasion: Red Team')"}
        Invasion: Red Team
.container
  .row
    .ul.list-unstyled
      .li{"ng-repeat": "entry in $ctrl.recent_log_entries track by $index"}
        .card
          = "{{ entry.event_type }}"
          = "{{ entry.entered_at }}"

.container
  .row
    %form.col.s12
      .row
        .input-field.col.s6
          %i.material-icons.prefix.pink blur_circular
          %input.validate{"id": "icon_prefix", "type": "text" }
          %label{"for": "icon_prefix"} BG
        .li (VBG - VBG.constant1)/VBG.constant2=suggested adjustment
        .input-field.col.s6
          %i.material-icons.prefix disc_full
          %output.validate{"id": "icon_telephone", "type": "tel" }
          %label{"for": "icon_telephone"} suggested adjustment
        .li
        .input-field.col.s6
          %i.material-icons.prefix border_bottom
          %input.validate{"id": "border_color", "type": "text" }
          %label{"for": "border_bottom"} lows are comment worthy

      .row
        .input-field.col.s6
          %i.material-icons.prefix.yellow border_inner
          %input.validate{"id": "icon_prefix", "type": "text" }
          %label{"for": "icon_prefix"} gC
        .li (VgC/VgC.constant1)=suggest uH
        .input-field.col.s6
          %i.material-icons.prefix album
          %input.validate{"id": "icon_telephone", "type": "tel" }
          %label{"for": "icon_telephone"} suggested uH
      .row
        %i.material-icons.prefix adjust
        %i.material-icons.prefix border_outer
        %i.material-icons.prefix blur_circular
        .li show suggested adjustment plus suggested uH =
        compare

      .row
        %i.material-icons.prefix border_style
        %i.material-icons.prefix border_left
        %i.material-icons.prefix border_vertical
        %i.material-icons.prefix border_right


        %i.material-icons.prefix flight_land
        %i.material-icons.prefix flight_takeoff

        %i.material-icons.prefix mood
        %i.material-icons.prefix mood_bad

        %i.material-icons.prefix sentiment_very_dissatisfied
        %i.material-icons.prefix sentiment_dissatisfied
        %i.material-icons.prefix sentiment_neutral
        %i.material-icons.prefix sentiment_satisfied
        %i.material-icons.prefix sentiment_very_satisfied

        %i.material-icons.prefix share
        %i.material-icons.prefix timeline
        %i.material-icons.prefix timer_3s
        %i.material-icons.prefix tonality
        %i.material-icons.prefix



      .row
        .input-field.col.s6
          %i.material-icons.prefix.red border_top
          %input.validate{"id": "icon_prefix", "type": "text" }
          %label{"for": "icon_prefix"} uH
        .li show math
        .input-field.col.s6
          %i.material-icons.prefix blur_on
          %input.validate{"id": "icon_telephone", "type": "tel" }
          %label{"for": "icon_telephone"} suggested gC

      .row
        %i.material-icons.prefix compare_arrows

      .row
        .input-field.col.s6
          %i.material-icons.prefix.blue border_horizontal
          %input.validate{"id": "icon_prefix", "type": "text" }
          %label{"for": "icon_prefix"} uL
        .li show math
        .input-field.col.s6
          %i.material-icons.prefix directions_walk
          %input.validate{"id": "icon_telephone", "type": "tel" }
          %label{"for": "icon_telephone"} msg?

      .row
        %i.material-icons.prefix compare

      .row
        %i.material-icons.prefix border_all


.container
  .row
    .card.col.s12.yellow
      .ul
        .li bG
        .li gC
        .li uL
        .li uH
        .li pp
        .li bup
        .li alb
        .li ste
        .li ftr
        .li bt
        .li clar
        .li km
      fields are abbreviation based, so we should store abbreviation and description and color
      .h2
        types of fields:
      .ul
        .li free form numerical entry
        .li small number dropdown, default driven (pills count)
        .li done / not done (checkbox or a button that goes away when pressed)
        .li midnight reset
        .li all fields should work via log entry

  .row
    .card.col.s12.yellow
      yellow
  .row
    .card.col.s12.yellow.lighten-3
      yellow.lighten-3
  .row
    .card.col.s12.yellow.lighten-5
      yellow.lighten-5

  .row
    .card.col.s12.orange
      orange
  .row
    .card.col.s12.orange.lighten-3
      orange.lighten-3
  .row
    .card.col.s12.orange.lighten-5
      orange.lighten-5

  .row
    .card.col.s12.red
      red
  .row
    .card.col.s12.red.lighten-3
      red.lighten-3
  .row
    .card.col.s12.red.lighten-5
      red.lighten-5

  .row
    .card.col.s12.purple
      purple
  .row
    .card.col.s12.purple.lighten-3
      purple.lighten-3
  .row
    .card.col.s12.purple.lighten-5
      purple.lighten-5

  .row
    .card.col.s12.blue
      blue
  .row
    .card.col.s12.blue.lighten-3
      blue.lighten-3
  .row
    .card.col.s12.blue.lighten-5
      blue.lighten-5

  .row
    .card.col.s12.green
      green
  .row
    .card.col.s12.green.lighten-3
      green.lighten-3
  .row
    .card.col.s12.green.lighten-5
      green.lighten-5

  .row
    .card.col.s6.black

  .row
    .card.col.s12
      %span.right
        Burn Rate:
        %price{"amount": "$ctrl.burn_rate"}
      %br
      %span{"ng-repeat": "tag in $ctrl.tags track by $index"}
        %span.chip.grey{"ng-if": "!$ctrl.entry.tags[tag.name]", "ng-click": "$ctrl.toggle_tag(tag)"}
          = "{{ tag.name }}"
        %span.chip.green{"ng-if": "$ctrl.entry.tags[tag.name]", "ng-click": "$ctrl.toggle_tag(tag)"}
          = "{{ tag.name }}"
      %br

      Create a new AXE entry
      .input-field
        %input{"type": "number", "ng-model": "$ctrl.new_entry_amount", "id": "new_entry_amount", "autofocus": true}
        %label{"for": "new_entry_amount"}Amount in Pennies
      .input-field
        %i.material-icons.prefix="&#xE0CD;"
        %input{"type": "text", "ng-model": "$ctrl.new_entry_comment", "id": "new_entry_comment"}
        %label{"for": "new_entry_comment"}Comment
      %button.right{"ng-click": "$ctrl.add_entry()"} Add New
      %br{clear: 'both'}
.spacer{"height": "50px"}
.container
  .row
    .ul.list-unstyled
      .li{"ng-repeat": "entry in $ctrl.entries track by $index"}
        .card
          %span.left
            = "{{ entry.comment }}"
          %span.right
            %price{"amount": "entry.pennies"}
          %br
          %span.right
            %span.chip.blue{"ng-repeat": "tag in $ctrl.entry_tags(entry) track by $index"}
              = "{{ tag.name }}"
          %br{clear: 'both'}
    = "# Cat picture"
